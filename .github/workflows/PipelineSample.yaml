---
name: Collection test, build and deploy
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Test with molecule
        run: |
          molecule test

      - name: Run unit tests
        env:
          VERBOSE: true
        run: |
          echo "TODO"

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          submodules: recursive

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      - name: Build Collection
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          echo RELEASE_VERSION=[$RELEASE_VERSION]
          ansible-playbook scripts/deploy.yml \
            -e tag="$RELEASE_VERSION" \
            -t build
          ls build/mtulio-labc-*.tar.gz

      #- name: Build Collection
      #  run: |
      #    mkdir build/
      #    ansible-playbook scripts/deploy.yml -e tag="${{ steps.get_version.outputs.VERSION }}"
      #    ansible-galaxy collection build --output-path build/
      #    pwd
      #    ls build/
      #    build_file=$(ls build/mtulio-labc-*.tar.gz)
      #    mv ${build_file} build/mtulio-labc.tar.gz

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mtulio-labc-${{ steps.get_version.outputs.VERSION }}.tar.gz
          path: |
            build

  deploy-tag-to-galaxy:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      #- name: Set up Go
      #  uses: actions/setup-go@v2
      #  with:
      #    go-version: 1.16
      #- name: Run GoReleaser
      #  uses: goreleaser/goreleaser-action@v2
      #  with:
      #    version: latest
      #    args: release --rm-dist
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Download binaries and prebuilt images
      #  uses: actions/download-artifact@v2
      #  with:
      #    #name: build-linux-${{ github.run_id }}
      #    name: mtulio-labc.tar.gz
          #path: build
      #- name: Download binaries and prebuilt images
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: build-windows-${{ github.run_id }}
      #    path: build
      #- name: Publish Collection on Galaxy
      #  run: |
      #    ansible-galaxy collection publish ./mtulio-labc.tar.gz --token ${{ secrets.GALAXY_TOKEN }}

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      #- name: Download binaries and prebuilt images
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: mtulio-labc-${{ steps.get_version.outputs.VERSION }}

      - name: Deploy to Galaxy
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          echo VERSION=[$RELEASE_VERSION]
          ansible-playbook scripts/deploy.yml \
            -e tag="${RELEASE_VERSION}" \
            -t build,deploy

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mtulio-labc-${{ steps.get_version.outputs.VERSION }}.tar.gz
          path: |
            build
